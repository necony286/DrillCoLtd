{"version":3,"sources":["base/_fonts.scss","main.css","base/_base.scss","abstracts/_mixins.scss","pages/_index.scss"],"names":[],"mappings":"AAAA,WAWE,qBAAA,CAVA,kBAAA,CASA,iBAAA,CADA,eAAA,CAPA,2CAAA,CACA,6TCqDF,CD1CA,WAWE,qBAAA,CAVA,kBAAA,CASA,iBAAA,CADA,eAAA,CAPA,8CAAA,CACA,+UC+CF,CDpCA,KACE,kBCsCF,CChEA,iBAOE,QAAA,CAIA,kBAAA,CANA,mBAAA,CACA,kBAAA,CAFA,mBAAA,CAMA,QAAA,CAFA,SAAA,CACA,SAAA,CANA,uBD2EF,CChEA,UAEE,kCAAA,CACA,iCAAA,CACA,sBDmEF,CChEA,KAEE,eDkEF,CEvDI,8CDbJ,KAMI,gBDkEF,CACF,CEjEI,8CDRJ,KAWI,aDkEF,CACF,CE3EI,8CDHJ,KAgBI,gBDkEF,CACF,CEjEI,2CDlBJ,KAyBI,aD8DF,CACF,CC3DA,KAEE,qBAAA,CADA,WD+DF,CGrHA,OAEE,aAAA,CADA,kBAAA,CAEA,iBHwHF,CGvHE,qBAIE,aAAA,CAFA,eAAA,CACA,eAAA,CAFA,iBH4HJ,CEtGI,8CCvBF,qBAMI,eH2HJ,CACF,CEhHI,8CClBF,qBASI,gBH6HJ,CACF,CG1HA,KAEE,aAAA,CADA,kBAAA,CAEA,mBH6HF,CG5HE,gBACE,cH8HJ","file":"styles.min.css","sourcesContent":["@font-face {\n  font-family: \"Roboto\";\n  src: url(\"../../assets/fonts/Roboto-Bold.eot\");\n  src: url(\"../../assets/fonts/Roboto-Bold.eot?#iefix\")\n      format(\"embedded-opentype\"),\n    url(\"../../assets/fonts/Roboto-Bold.woff2\") format(\"woff2\"),\n    url(\"../../assets/fonts/Roboto-Bold.woff\") format(\"woff\"),\n    url(\"../../assets/fonts/Roboto-Bold.ttf\") format(\"truetype\"),\n    url(\"../../assets/fonts/Roboto-Bold.svg#Roboto-Bold\") format(\"svg\");\n  font-weight: 700;\n  font-style: normal;\n  font-display: fallback;\n}\n\n@font-face {\n  font-family: \"Roboto\";\n  src: url(\"../../assets/fonts/Roboto-Regular.eot\");\n  src: url(\"../../assets/fonts/Roboto-Regular.eot?#iefix\")\n      format(\"embedded-opentype\"),\n    url(\"../../assets/fonts/Roboto-Regular.woff2\") format(\"woff2\"),\n    url(\"../../assets/fonts/Roboto-Regular.woff\") format(\"woff\"),\n    url(\"../../assets/fonts/Roboto-Regular.ttf\") format(\"truetype\"),\n    url(\"../../assets/fonts/Roboto-Regular.svg#Roboto-Regular\") format(\"svg\");\n  font-weight: normal;\n  font-style: normal;\n  font-display: fallback;\n}\n\nbody {\n  font-family: \"Roboto\";\n}\n","/*\n0 - 575.98px:         Extra small devices (portrait phones, less than 576px)\n575.98 - 767.98px:    Small devices (landscape phones, less than 768px)\n767.98 - 991.98px:    Medium devices (tablets, less than 992px)\n991.98 - 1199.98px:   Large devices (desktops, less than 1200px)\n[1199.98 - 1800px]:   is where our normal styles apply\n1800px + :            Extra large devices (large desktops)\n\n$breakpoint arguement choices:\n- phone-port\n- phone-land\n- tab-port\n- tab-land\n- desktop-big\n\n1em = 16px\n*/\n/*\n  EXAMPLE\n\n  .example {\n    @include respond(phone-port) {\n      rule: value; (background: white;)\n   }\n  }\n\n  @include respond(desktop-big) {\n     rule: value; (background: black;)\n  }\n  } \n  */\n/*\n  EXAMPLE\n\n  .example {\n    @include fluid-font(20px, 48px);\n  } \n  */\n/*\n  EXAMPLE\n\n  .heading {\n    @include heading-typo;\n  }\n\n  .text {\n    @include text-typo;\n  }\n  */\n@font-face {\n  font-family: \"Roboto\";\n  src: url(\"../../assets/fonts/Roboto-Bold.eot\");\n  src: url(\"../../assets/fonts/Roboto-Bold.eot?#iefix\") format(\"embedded-opentype\"), url(\"../../assets/fonts/Roboto-Bold.woff2\") format(\"woff2\"), url(\"../../assets/fonts/Roboto-Bold.woff\") format(\"woff\"), url(\"../../assets/fonts/Roboto-Bold.ttf\") format(\"truetype\"), url(\"../../assets/fonts/Roboto-Bold.svg#Roboto-Bold\") format(\"svg\");\n  font-weight: 700;\n  font-style: normal;\n  font-display: fallback;\n}\n@font-face {\n  font-family: \"Roboto\";\n  src: url(\"../../assets/fonts/Roboto-Regular.eot\");\n  src: url(\"../../assets/fonts/Roboto-Regular.eot?#iefix\") format(\"embedded-opentype\"), url(\"../../assets/fonts/Roboto-Regular.woff2\") format(\"woff2\"), url(\"../../assets/fonts/Roboto-Regular.woff\") format(\"woff\"), url(\"../../assets/fonts/Roboto-Regular.ttf\") format(\"truetype\"), url(\"../../assets/fonts/Roboto-Regular.svg#Roboto-Regular\") format(\"svg\");\n  font-weight: normal;\n  font-style: normal;\n  font-display: fallback;\n}\nbody {\n  font-family: \"Roboto\";\n}\n\n*,\n*::before,\n*::after {\n  vertical-align: baseline;\n  font-weight: inherit;\n  font-family: inherit;\n  font-style: inherit;\n  border: 0 none;\n  outline: 0;\n  padding: 0;\n  margin: 0;\n  box-sizing: inherit;\n}\n\nhtml,\nbody {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  scroll-behavior: smooth;\n}\n\nhtml {\n  font-size: 62.5%;\n}\n@media only screen and (max-width: 74.99875em) {\n  html {\n    font-size: 56.25%;\n  }\n}\n@media only screen and (max-width: 61.99875em) {\n  html {\n    font-size: 50%;\n  }\n}\n@media only screen and (max-width: 47.99875em) {\n  html {\n    font-size: 43.75%;\n  }\n}\n@media only screen and (min-width: 112.5em) {\n  html {\n    font-size: 75%;\n  }\n}\n\nbody {\n  height: 100%;\n  box-sizing: border-box;\n}\n\nheader {\n  max-width: 141.4rem;\n  margin: 0 auto;\n  padding: 2rem 4rem;\n}\nheader .main_heading {\n  text-align: center;\n  font-size: 14rem;\n  font-weight: bold;\n  color: #34689a;\n}\n@media only screen and (max-width: 47.99875em) {\n  header .main_heading {\n    font-size: 13rem;\n  }\n}\n@media only screen and (max-width: 35.99875em) {\n  header .main_heading {\n    font-size: 8.5rem;\n  }\n}\n\nmain {\n  max-width: 141.4rem;\n  margin: 0 auto;\n  padding-bottom: 4rem;\n}\nmain .container {\n  padding: 0 4rem;\n}","// Base styles\n\n//CSS reset (Condensed Universal Reset)\n*,\n*::before,\n*::after {\n  vertical-align: baseline;\n  font-weight: inherit;\n  font-family: inherit;\n  font-style: inherit;\n  border: 0 none;\n  outline: 0;\n  padding: 0;\n  margin: 0;\n  box-sizing: inherit;\n}\n\nhtml,\nbody {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  scroll-behavior: smooth;\n}\n\nhtml {\n  // This defines what 1rem is\n  font-size: 62.5%; //1 rem = 10px, 10px/16px = 62.5%\n\n  @include respond(tab-land) {\n    // width < 1199.98px\n    font-size: 56.25%; //1 rem = 9px, 9/16 = 56.25%\n  }\n\n  @include respond(tab-port) {\n    // width < 991.98px\n    font-size: 50%; //1 rem = 8px, 8/16 = 50%\n  }\n\n  @include respond(phone-land) {\n    // width < 767.98px\n    font-size: 43.75%; //1 rem = 7px, 7/16 = 43.75%\n  }\n\n  // @include respond(phone-port) {\n  //   // width < 575.98px\n  //   font-size: 37.5%; //1 rem = 6px, 6/16 = 37.5%\n  // }\n\n  @include respond(desktop-big) {\n    font-size: 75%; //1rem = 12px, 12/16 = 75%\n  }\n}\n\nbody {\n  height: 100%;\n  box-sizing: border-box;\n}\n","// Scss mixins\n\n// MEDIA QUERY MANAGER\n/*\n0 - 575.98px:         Extra small devices (portrait phones, less than 576px)\n575.98 - 767.98px:    Small devices (landscape phones, less than 768px)\n767.98 - 991.98px:    Medium devices (tablets, less than 992px)\n991.98 - 1199.98px:   Large devices (desktops, less than 1200px)\n[1199.98 - 1800px]:   is where our normal styles apply\n1800px + :            Extra large devices (large desktops)\n\n$breakpoint arguement choices:\n- phone-port\n- phone-land\n- tab-port\n- tab-land\n- desktop-big\n\n1em = 16px\n*/\n@mixin respond($breakpoint) {\n  @if $breakpoint == phone-port {\n    @media only screen and (max-width: 35.99875em) {\n      @content;\n    } //575.98px\n  }\n  @if $breakpoint == phone-land {\n    @media only screen and (max-width: 47.99875em) {\n      @content;\n    } //767.98px\n  }\n  @if $breakpoint == tab-port {\n    @media only screen and (max-width: 61.99875em) {\n      @content;\n    } //991.98px\n  }\n  @if $breakpoint == tab-land {\n    @media only screen and (max-width: 74.99875em) {\n      @content;\n    } //1199.98px\n  }\n  @if $breakpoint == desktop-big {\n    @media only screen and (min-width: 112.5em) {\n      @content;\n    } //1800\n  }\n}\n/*\n  EXAMPLE\n  \n  .example {\n    @include respond(phone-port) {\n      rule: value; (background: white;)\n   }\n  }\n  \n  @include respond(desktop-big) {\n     rule: value; (background: black;)\n  }\n  } \n  */\n\n//RESPONSIVE TEXT - FLUID TEXT\n// $min-vw: 575.98px; // Screen min\n// $max-vw: 1800px; // Screen max\n\n// @function strip-unit($value) {\n//   @return $value / ($value * 0 + 1);\n// }\n\n// @mixin fluid-font($min-font-size, $max-font-size) {\n//   font-size: $min-font-size;\n\n//   @media screen and (min-width: $min-vw) {\n//     font-size: calc(\n//       #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *\n//         ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n//     );\n//   }\n\n//   @media screen and (min-width: $max-vw) {\n//     font-size: $max-font-size;\n//   }\n// }\n/*\n  EXAMPLE\n  \n  .example {\n    @include fluid-font(20px, 48px);\n  } \n  */\n\n// TYPO MIXINS (use in typography.scss)\n// @mixin heading-typo {\n//   font-family: _font(heading, font-family);\n//   font-weight: _font(heading, weight);\n//   color: _palette(typo, heading);\n// }\n\n// @mixin text-typo {\n//   font-family: _font(text, font-family);\n//   font-weight: _font(text, weight);\n//   color: _palette(typo, text);\n// }\n/*\n  EXAMPLE\n  \n  .heading {\n    @include heading-typo;\n  }\n  \n  .text {\n    @include text-typo;\n  }\n  */\n","header {\r\n  max-width: 141.4rem;\r\n  margin: 0 auto;\r\n  padding: 2rem 4rem;\r\n  .main_heading {\r\n    text-align: center;\r\n    font-size: 14rem;\r\n    font-weight: bold;\r\n    color: #34689a;\r\n    @include respond(phone-land) {\r\n      font-size: 13rem;\r\n    }\r\n    @include respond(phone-port) {\r\n      font-size: 8.5rem;\r\n    }\r\n  }\r\n}\r\nmain {\r\n  max-width: 141.4rem;\r\n  margin: 0 auto;\r\n  padding-bottom: 4rem;\r\n  .container {\r\n    padding: 0 4rem;\r\n  }\r\n}\r\n"]}